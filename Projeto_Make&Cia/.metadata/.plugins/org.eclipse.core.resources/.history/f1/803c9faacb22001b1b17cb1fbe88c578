package br.com.libertas.db;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.LinkedList;

import br.com.libertas.dto.Produto;
import br.com.libertas.dto.Usuario;

public class UsuarioDao {

	// Inseri usuário na base de dados
	public String inserir(Usuario user) {
		
		Conexao con = new Conexao();
		String saida = "Sem Retorno !";
		
		try {
			String sql = "INSERT INTO cad_usuario "
					+ "(nome, password, email, admin)"
					+ "VALUES  (?, ?, ?, ?)";
			
			PreparedStatement prep = con.getConexao().prepareStatement(sql);
			prep.setString(1, user.getNome());
			prep.setString(2, user.getSenha());
			prep.setString(3, user.getEmail());
			prep.setBoolean(4, user.getAdmin());
			prep.execute();
			
			saida = "Usuário cadastrado com sucesso !"; 
			
		} 
		catch (Exception e) {
			e.printStackTrace();
			saida = "Não foi possivel cadastrar o usuário, motivo : " + e.toString();
		}
		con.desconecta();
		
		return saida;
	}
		
		// Exclui usuário da base de dados
		public String excluir(int id) {
			
			Conexao con = new Conexao();
			String saida = "Sem Retorno !";
			
			try {
				
				String sql = "DELETE FROM cad_usuario WHERE id = ?";
				
				PreparedStatement prep = con.getConexao().prepareStatement(sql);
				prep.setInt(1, id);
				prep.execute();
				
				saida = "Usuário excluido com sucesso !"; 
				
				System.out.print("Parametro chegado => " + id);
				
				prep.close();
				con.desconecta();
				
			} 
			catch (Exception e) {
				e.printStackTrace();
			}

			return saida;
		}
		
		
		// Altera usuário da base de dados
		public String alterar(Usuario user) {
			
			Conexao con = new Conexao();
			String saida = "Sem Retorno !";
			
			try {
				String sql = "UPDATE cad_usuario SET nome=?, password=?, email=?, admin=? "
						+ "WHERE id=?";
				
				PreparedStatement prep = con.getConexao().prepareStatement(sql);
				prep.setString(1, user.getNome());
				prep.setString(2, user.getSenha());
				prep.setString(3, user.getEmail());
				prep.setBoolean(4, user.getAdmin());
				prep.execute();
				
				saida = "Usuário atualizado com sucesso !"; 
				
			} 
			catch (Exception e) {
				e.printStackTrace();
				saida = "Não foi possivel atualizar o usuário, motivo : " + e.toString();
			}
			con.desconecta();
			
			return saida;
		}
		
		// Consulta usuário da base de dados
		public Usuario consutar(int id) {
			
			Usuario user = new Usuario();
			Conexao con = new Conexao();
			
			try {
				
				String sql = "SELECT * FROM cad_usuario WHERE id = " + id;
				
				Statement sta = con.getConexao().createStatement();
				ResultSet res = sta.executeQuery(sql);
				
				if(res.next()) {
					user.setId(res.getInt("id"));
					user.setNome(res.getString("nome"));
					user.setSenha(res.getString("password"));
					user.setEmail(res.getString("email"));
					user.setAdmin(res.getBoolean("admin"));
				}
				
				res.close();
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
			con.desconecta();
			
			return user;
		}
		
		// Lista todos usuários cadastrado na base
		public LinkedList<Usuario> listar(){
			
			Conexao con = new Conexao();
			LinkedList<Usuario> lista = new LinkedList<Usuario>();
			
			try {
				
				String sql = "SELECT * FROM cad_usuario";
				
				Statement instrucao = con.getConexao().createStatement();
				ResultSet res = instrucao.executeQuery(sql);
				while (res.next()) {
					Usuario user = new Usuario();
					user.setId(res.getInt("id"));
					user.setNome(res.getString("nome"));
					user.setSenha(res.getString("password"));
					user.setEmail(res.getString("email"));
					user.setAdmin(res.getBoolean("admin"));
					lista.add(prod);
				}
				
				res.close();
				
			} 
			catch (Exception e) {
				e.printStackTrace();
			}
			con.desconecta();
			
			return lista;
		}
	
}
