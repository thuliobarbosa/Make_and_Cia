package br.com.libertas.db;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.LinkedList;

import br.com.libertas.dto.Produto;

public class UsuarioDao {

	// Realiza a inserção de um novo usuário ao bando de dados
	public String inserir(Usuario user) {
		
		Conexao con = new Conexao();
		String saida = "Sem Retorno !";
		
		try {
			String sql = "INSERT INTO cad_usuario "
					+ "(login, password, email, admin) "
					+ "VALUES  (?, ?, ?, ?)";
			
			PreparedStatement prep = con.getConexao().prepareStatement(sql);
			prep.setString(1, user.getLogin());
			prep.setString(2, user.getPassword());
			prep.setString(3, user.getEmail());
			prep.setBoolean(4, user.getAdmin());
			prep.execute();
			
			saida = "Usuário cadastrado com sucesso !"; 
			
		} 
		catch (Exception e) {
			e.printStackTrace();
			saida = "Não foi possivel cadastrar o usuário, motivo : " + e.toString();
		}
		con.desconecta();
		return saida;
	}
		
		
	// Realiza a exclusão de um usuário cadastro na base
	public String excluir(int id) {
		
		Conexao con = new Conexao();
		String saida = "Sem Retorno !";
		
		try {
			String sql = "DELETE FROM cad_usuario WHERE id = ?";
			
			System.out.println(sql);
			PreparedStatement prep = con.getConexao().prepareStatement(sql);
			prep.setInt(1, id);
			prep.execute();
			
			saida = "Usuário excluido com sucesso !"; 
			
		} 
		catch (Exception e) {
			e.printStackTrace();
			saida = "Não foi possivel excluir o produto, motivo : " + e.toString();
		}
		con.desconecta();
		return saida;
	}
		
		
	// Realiza a alteração de um usuário cadastrado na base
	public String alterar(Usuario user) {
		
		Conexao con = new Conexao();
		String saida = "Sem Retorno !";
		
		try {
			String sql = "UPDATE cad_usuario SET login=?, password=?, email=?, admin=? "
					+ "WHERE id=?";
			
			PreparedStatement prep = con.getConexao().prepareStatement(sql);
			prep.setString(1, user.getLogin());
			prep.setString(2, user.getPassword());
			prep.setString(3, user.getEmail());
			prep.setBoolean(4, user.getAdmin());
			prep.setInt(5, user.getId());
			prep.execute();
			
			saida = "Usuário atualizado com sucesso !"; 
			
		} 
		catch (Exception e) {
			e.printStackTrace();
			saida = "Não foi possivel atualizar o produto, motivo : " + e.toString();
		}
		con.desconecta();
		return saida;
	}
		
	// Realiza consulta de um usuário
	public Usuario consutar(int id) {
		
		Usuario user = new Usuario();
		Conexao con = new Conexao();
		
		try {
			
			String sql = "SELECT * FROM cad_usuario WHERE id = " + id;
			
			Statement sta = con.getConexao().createStatement();
			ResultSet res = sta.executeQuery(sql);
			
			if(res.next()) {
				user.setLogin(res.getString("nome"));
				user.setPassword(res.getString("password"));
				user.setEmail(res.getString("email"));
				user.setAdmin(res.getBoolean("admin"));
				user.setId(res.getInt("id"));
			}
			res.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		con.desconecta();
		
		return user;
	}
		
	// Lista todos usuários cadastro na base
	public LinkedList<Usuario> listar(){
		
		Conexao con = new Conexao();
		LinkedList<Usuario> lista = new LinkedList<Usuario>();
		
		try {
			
			String sql = "SELECT * FROM cad_usuario";
			
			Statement instrucao = con.getConexao().createStatement();
			ResultSet res = instrucao.executeQuery(sql);
			
			while (res.next()) {
				Usuario user = new Usuario();
				user.setLogin(res.getString("nome"));
				user.setPassword(res.getString("password"));
				user.setEmail(res.getString("email"));
				user.setAdmin(res.getBoolean("admin"));
				user.setId(res.getInt("id"));
				lista.add(user);
			}
			
			res.close();
			
		} 
		catch (Exception e) {
			e.printStackTrace();
		}
		con.desconecta();
		
		return lista;
	}
	
}
